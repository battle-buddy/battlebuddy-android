#pragma once

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */



struct Ammo;

struct Armor;

/**
 * Calculator for calculating the impact of ammunition on a body
 */
struct HealthCalculator;

/**
 * Calculator for calculating the impact of ammunition on armor
 */
struct PenetrationCalculator;

struct PersonHealth {
  double head;
  double thorax;
  double stomach;
  double arm_left;
  double arm_right;
  double leg_left;
  double leg_right;
};

/**
 * Creates a new `Ammo` instance
 */
struct Ammo *create_ammo(double damage,
                         double armor_damage,
                         double penetration,
                         double frag_chance);

/**
 * Creates a new `Armor` instance
 */
struct Armor *create_armor(int class_,
                           double durability,
                           double durability_max,
                           double destructibility,
                           double blunt_throughput);

/**
 * Creates a new `PersonHealth` instance
 */
struct PersonHealth *create_person_health(double head,
                                          double thorax,
                                          double stomach,
                                          double arm_left,
                                          double arm_right,
                                          double leg_left,
                                          double leg_right);

/**
 * Destroys and frees the memory of a `PersonHealth` instance
 */
void destroy_person_health(struct PersonHealth *health);

/**
 * Returns the current health status of a `HealthCalculator` instance
 */
struct PersonHealth *healh_get_person_health(const struct HealthCalculator *calculator);

/**
 * Creates a new `HealthCalculator` instance
 */
struct HealthCalculator *health_create_calc(struct PersonHealth *person, struct Ammo *ammo);

/**
 * Destroys and frees the memory of a `HealthCalculator` instance
 */
void health_destroy_calc(struct HealthCalculator *calculator);

/**
 * Returns the alive status of a `HealthCalculator` instance
 */
bool health_get_person_alive(const struct HealthCalculator *calculator);

/**
 * Processes the impact of ammo on a body zone within a `HealthCalculator` instance
 */
struct HealthCalculator *health_impact_on_zone(struct HealthCalculator *calculator,
                                               unsigned int zone);

/**
 * Resets the calculation of a `HealthCalculator` instance
 */
struct HealthCalculator *health_reset_calc(struct HealthCalculator *calculator);

/**
 * Sets new ammo to a existing `HealthCalculator` instance
 */
struct HealthCalculator *health_set_ammo(struct HealthCalculator *calculator, struct Ammo *ammo);

/**
 * Creates a new `PenetrationCalculator` instance
 */
struct PenetrationCalculator *penetration_create_calc(struct Armor *armor, struct Ammo *ammo);

/**
 * Destroys and frees the memory of a `PenetrationCalculator` instance
 */
void penetration_destroy_calc(struct PenetrationCalculator *calculator);

/**
 * Returns the current penetration chance of a `PenetrationCalculator` instance
 */
double penetration_get_chance(const struct PenetrationCalculator *calculator);

/**
 * Returns the current armor durability of a `PenetrationCalculator` instance
 */
double penetration_get_durability(const struct PenetrationCalculator *calculator);

/**
 * Returns the maximum armor durability of a `PenetrationCalculator` instance
 */
double penetration_get_durability_max(const struct PenetrationCalculator *calculator);

/**
 * Sets new ammo to a existing `PenetrationCalculator` instance
 */
struct PenetrationCalculator *penetration_set_ammo(struct PenetrationCalculator *calculator,
                                                   struct Ammo *ammo);

/**
 * Sets new armor to a existing `PenetrationCalculator` instance
 */
struct PenetrationCalculator *penetration_set_armor(struct PenetrationCalculator *calculator,
                                                    struct Armor *armor);

/**
 * Sets armor durability of a `PenetrationCalculator` instance
 */
struct PenetrationCalculator *penetration_set_durability(struct PenetrationCalculator *calculator,
                                                         double durability);
